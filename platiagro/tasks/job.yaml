apiVersion: batch/v1
kind: Job
metadata:
  name: init-tasks
spec:
  template:
    spec:
      containers:
      - command:
        - python
        - -c
        - |
            import json

            from projects.controllers.tasks import create_task

            with open("/tasks/config.json") as f:
                tasks = json.load(f)

            for task in tasks:
                name = task["name"]
                image = task["image"]
                description = task.get("description")
                tags = task.get("tags", ["DEFAULT"])
                commands = task.get("commands")
                arguments = task.get("arguments")

                try:
                    with open(task["experimentNotebook"], "rb") as f:
                        experiment_notebook = json.load(f)
                except KeyError:
                    experiment_notebook = None

                try:
                    with open(task["deploymentNotebook"], "rb") as f:
                        deployment_notebook = json.load(f)
                except KeyError:
                    deployment_notebook = None

                create_task(
                    name=name,
                    description=description,
                    tags=tags,
                    image=image,
                    commands=commands,
                    arguments=arguments,
                    experiment_notebook=experiment_notebook,
                    deployment_notebook=deployment_notebook,
                    is_default=True,
                )
        image: platiagro/projects:0.2.0-SNAPSHOT
        name: init-tasks
        env:
        - name: MINIO_ENDPOINT
          value: "minio-service.kubeflow:9000"
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        - name: MYSQL_DB_HOST
          value: "mysql.kubeflow"
        - name: MYSQL_DB_NAME
          value: "platiagro"
        - name: JUPYTER_ENDPOINT
          value: "http://server.anonymous:80/notebook/anonymous/server"
        - name: KF_PIPELINES_ENDPOINT
          value: ml-pipeline.deployments:8888
        - name: KF_PIPELINES_NAMESPACE
          value: deployments
        volumeMounts:
        - mountPath: /tasks/config.json
          subPath: config.json
          readOnly: true
          name: tasks-configmap
      restartPolicy: OnFailure
      volumes:
      - configMap:
          name: tasks-configmap
        name: tasks-configmap
